// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: classroom.sql

package db

import (
	"context"
)

const getClassroom = `-- name: GetClassroom :one
select id, building_id, room_code
from classroom
where id = $1
`

func (q *Queries) GetClassroom(ctx context.Context, id int64) (Classroom, error) {
	row := q.db.QueryRow(ctx, getClassroom, id)
	var i Classroom
	err := row.Scan(&i.ID, &i.BuildingID, &i.RoomCode)
	return i, err
}

const getClassrooms = `-- name: GetClassrooms :many
select id, building_id, room_code
from classroom
`

func (q *Queries) GetClassrooms(ctx context.Context) ([]Classroom, error) {
	rows, err := q.db.Query(ctx, getClassrooms)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Classroom{}
	for rows.Next() {
		var i Classroom
		if err := rows.Scan(&i.ID, &i.BuildingID, &i.RoomCode); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
