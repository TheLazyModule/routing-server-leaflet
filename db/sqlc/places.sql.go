// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: places.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const listPlaces = `-- name: ListPlaces :many
SELECT name, ST_ASTEXT(location) as location
from places
order by id
`

type ListPlacesRow struct {
	Name     pgtype.Text `json:"name"`
	Location interface{} `json:"location"`
}

func (q *Queries) ListPlaces(ctx context.Context) ([]ListPlacesRow, error) {
	rows, err := q.db.Query(ctx, listPlaces)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ListPlacesRow{}
	for rows.Next() {
		var i ListPlacesRow
		if err := rows.Scan(&i.Name, &i.Location); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
