// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: nodes.sql

package db

import (
	"context"
)

const listNodes = `-- name: ListNodes :many
SELECT name, ST_ASTEXT(point_geom) as point_geom
FROM nodes
ORDER BY id
`

type ListNodesRow struct {
	Name      string      `json:"name"`
	PointGeom interface{} `json:"point_geom"`
}

func (q *Queries) ListNodes(ctx context.Context) ([]ListNodesRow, error) {
	rows, err := q.db.Query(ctx, listNodes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ListNodesRow{}
	for rows.Next() {
		var i ListNodesRow
		if err := rows.Scan(&i.Name, &i.PointGeom); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
